/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cngui;
import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Dell
 */
public class ServerGUI extends javax.swing.JFrame {
//    int port=0;
    public static String msgSend;
    public server obj; 
    public ServerSocket serverSocket = null;
//    ServerSocket ss;
//    Socket s;
//    PrintStream dos;
//    DataInputStream in;
//    DataInputStream inn;
public class server// implements Runnable
{
    int port=0;
    serverInstance instance;
    server(int p) throws IOException{
        port=p;
//        System.out.println("In constructor of server");
        boolean listeningSocket = true;
        try {
//        System.out.println("In try start (Server)");
            serverSocket = new ServerSocket(port);
//        System.out.println("In try end (Server)");
        } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Could not listen on port: "+port);
        }

        while(listeningSocket){
//        System.out.println("In while");
            Socket clientSocket = serverSocket.accept();
            instance = new serverInstance(clientSocket);
            instance.start();
//                    System.out.println("instance created");
        }
        serverSocket.close();              
    }
public class serverInstance extends Thread{

    private Socket socket = null;
    PrintStream dos;
    DataInputStream inn;
    public serverInstance(Socket socket) {

        super("serverInstance");
        this.socket = socket;
//        System.out.println("In instance constructor");
    }

    public void run() {
        try {
//                                                            System.out.println("In try start (Miniserver)");
//            socket=serverSocket.accept();
            dos=new PrintStream(socket.getOutputStream());
            inn=new DataInputStream(socket.getInputStream());
                statuss.setText("Status : Listening...");
//                                                        System.out.println("before entering thread (Miniserver)");
        final Thread serverThreadR = new Thread() {
            @Override
            public void run() {
            try {
//                                                                    System.out.println("in thread start");                
                while(true)
                {

                    String str1=inn.readLine();
                    if(str1!=null)
                        msgR.append(str1+"\n");
//                        msgR.setText("Client: "+str1);              
//                    System.out.println("msg received"+str1);
//                    if(str1.equals("end"))
//                    {
//                        serverSocket.close();
//                        break;
//                    }
                }
            } catch (Exception e) {
                    e.printStackTrace();
            }
            };
        };
        serverThreadR.start();            
        final Thread serverThreadS = new Thread() {
            @Override
            public void run() {
            try {
//                                                                    System.out.println("in thread start sending");                
                while(true)
                {
                                                                    System.out.print("");                                               
                    if(msgSend!=null){                                                  
                        dos.println(msgSend);
//                        msgR.append("Me: "+msgSend+"\n");
                        msgSend=null;
                    }

                }
            } catch (Exception e) {
                    e.printStackTrace();
            }
            };
        };
        serverThreadS.start();            

        } catch (IOException ex) {
            Logger.getLogger(server.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
            //implement your methods here

}
}    
    /**
     * Creates new form Server
     */
    public ServerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        portt = new javax.swing.JTextField();
        listenButton = new javax.swing.JButton();
        statuss = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgR = new javax.swing.JTextArea();
        msgS = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SERVER");

        jLabel2.setForeground(new java.awt.Color(0, 153, 51));
        jLabel2.setText("Port Number");

        portt.setForeground(new java.awt.Color(0, 153, 51));
        portt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porttActionPerformed(evt);
            }
        });

        listenButton.setBackground(new java.awt.Color(0, 153, 51));
        listenButton.setForeground(new java.awt.Color(255, 255, 255));
        listenButton.setText("Start Listening");
        listenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listenButtonActionPerformed(evt);
            }
        });

        statuss.setForeground(new java.awt.Color(0, 153, 51));
        statuss.setText("Status: Not Listening");

        jLabel5.setForeground(new java.awt.Color(0, 153, 51));
        jLabel5.setText("Type Your Message here");

        sendButton.setBackground(new java.awt.Color(0, 153, 51));
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        msgR.setColumns(20);
        msgR.setRows(5);
        jScrollPane1.setViewportView(msgR);

        jLabel6.setForeground(new java.awt.Color(0, 153, 51));
        jLabel6.setText("Chat:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(msgS)
                                .addGap(18, 18, 18)
                                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(statuss))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(portt, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(listenButton)))))
                        .addGap(30, 30, 30))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(portt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listenButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statuss)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void porttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porttActionPerformed

    private void listenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listenButtonActionPerformed
        // TODO add your handling code here:
       serverSocket=null;
        statuss.setText("Status : Not Listening");
        try{
           int port=Integer.parseInt(this.portt.getText());
        final Thread serverThread = new Thread() {
            @Override
            public void run() {
            try {                
           obj=new server(port);


            } catch (Exception e) {
                            e.printStackTrace();
                        }
                        };
                    };
        serverThread.start();
       

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Integer data is accepted in port only!");
        }        
    }//GEN-LAST:event_listenButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
            if(serverSocket==null){
                JOptionPane.showMessageDialog(null, "You have not started server");
            }
            else{
                msgSend=msgS.getText();
                msgS.setText("");
            }
    }//GEN-LAST:event_sendButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listenButton;
    private javax.swing.JTextArea msgR;
    private javax.swing.JTextField msgS;
    private javax.swing.JTextField portt;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel statuss;
    // End of variables declaration//GEN-END:variables
}
